#!/bin/bash

# Doily (c) 2017 Finn Ellis, licensed under MIT.
# Manage writing into daily files.
# https://github.com/relsqui/doily

set -e

# This complies with the XDG Base Directory Specification:
# https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html
CONF_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/doily"
CONF_FILE="${CONF_DIR}/doily.conf"


if [[ -e "${CONF_FILE}" ]]; then
    source "${CONF_FILE}"
else
    if [[ -e "/usr/local/etc/doily/default.conf" ]]; then
        cp /usr/local/etc/doily/default.conf "${CONF_FILE}"
    else
        cat <<EOF

Couldn't find a default configuration file for you!

This isn't supposed to happen. Please check http://github.com/relsqui/doily
for an example configuration file, then put it in:

${CONF_FILE}

EOF
        exit 1
    fi
fi


if [[ -n "$public_dailies" ]]; then
    file_perms=644
    dir_perms=755
    doily_group="$USER"
elif [[ -n "$doily_group" ]]; then
    file_perms=640
    dir_perms=750
else
    file_perms=600
    dir_perms=700
    doily_group="$USER"
fi

if [[ -z "${doily_dir}" ]]; then
    echo "No storage location set for Doily!"\
         "Please set one by editing ${CONF_FILE}" 1>&2
    exit 1
elif [[ "${doily_dir}" != /* ]]; then
    # If it starts with ~, the shell will expand it before it gets here.
    echo "Your Doily directory is set to a relative path, which is"\
         "unsafe. Please change it by editing ${CONF_FILE}" 1>&2
    exit 1
elif [[ "${doily_dir}" -ef "${HOME}" ]]; then
    echo "Your Doily directory is set to your home directory, which is"\
         "unsafe. Please change it by editing ${CONF_FILE}" 1>&2
    exit 1
elif [[ ! -d "${doily_dir}" ]]; then
    mkdir -p "${doily_dir}"
fi

# Default to nano if the preferred editor is empty.
"${EDITOR:-nano}" "${doily_dir}/$(date +%F)"

# Set permissions on everything, in case the config has changed.
# (If you were wondering why the config file says not to use your home
# directory as your Doily directory, this is why.)
chmod "$dir_perms" "${doily_dir}"
chgrp "$doily_group" "${doily_dir}"

if ! find "${doily_dir}" -maxdepth 0 -empty; then
    # These will error out if the directory is empty (for example if the text
    # editor was closed without saving), so we check first.
    # The method is taken from: http://stackoverflow.com/a/91769
    chmod "$file_perms" "${doily_dir}/*"
    chgrp "$doily_group" "${doily_dir}/*"
fi

if [[ -n "${use_git}" ]]; then
    # This will usually be excessive but harmless; if use_git is newly turned
    # on, though, it ensures the repo gets created and finds old dailies.
    git -C "${doily_dir}" init
    git -C "${doily_dir}" add "${doily_dir}"
    # The commit commands will return non-zero if we didn't commit anything,
    # but that's okay, so add an extra true to keep set -e from exiting.
    if [[ -n "${auto_commit}" ]]; then
        git -C "${doily_dir}" commit -m "Automatic commit from Doily." || true
    else
        git -C "${doily_dir}" commit || true
    fi
fi
